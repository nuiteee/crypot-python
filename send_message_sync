def send_message_sync(self, message):
    """同步发送消息到Telegram"""
    if not config.TELEGRAM_CHAT_ID:
        logger.warning("未设置TELEGRAM_CHAT_ID，无法发送消息")
        return
    
    # 先尝试通过API发送
    success = False
    
    try:
        # 使用requests库直接发送HTTP请求
        url = f"https://api.telegram.org/bot{config.TELEGRAM_BOT_TOKEN}/sendMessage"
        data = {
            "chat_id": config.TELEGRAM_CHAT_ID,
            "text": message
        }
        
        # 添加代理支持
        proxies = None
        if hasattr(config, 'PROXY_URL') and config.PROXY_URL:
            proxies = {
                "http": config.PROXY_URL,
                "https": config.PROXY_URL
            }
        elif hasattr(config, 'PROXY') and config.PROXY:
            proxies = {
                "http": config.PROXY,
                "https": config.PROXY
            }
        
        # 设置超时
        response = requests.post(url, data=data, proxies=proxies, timeout=30)
        if response.ok:
            success = True
        else:
            logger.error(f"发送Telegram消息失败，状态码: {response.status_code}, 响应内容: {response.text}")
    except Exception as e:
        logger.error(f"发送Telegram消息失败: {e}")
    
    # 如果API发送失败，记录到文件
    if not success:
        try:
            timestamp = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
            with open("telegram_messages.log", "a", encoding="utf-8") as f:
                f.write(f"[{timestamp}] {message}\n")
            logger.info(f"消息已保存到telegram_messages.log文件")
        except Exception as e:
            logger.error(f"保存消息到文件失败: {e}")
    
    return success 